//
//  main.swift
//  SeSAC
//
//  Created by 김동현 on 12/3/24.
//

/*
 
 하드웨어: 아이폰/아이패드
 소프트웨어: 하드웨어를 동작할 수 있는 플랫폼 기반으로 만들어주는 프로그램 ex) os
 통합개발환경(IDE): xcode(개발에 관련된 모든 작업을 진행)
 새로운 프레임워크: swiftUi
 swiftUi, UiKit 둘다 공부해야한다
 
 swiftUi 장단점
 장점: 다양한거 공부하기 힘드니까 swiftUi만 학습하면 여러 os앱을 만들수 있다..-> 여러 플랫폼 동시 대응 가능성
 단점: 내부적으로는 기존 기능들을 포함하고 있다(세부적 컨트롤을 접근할때는 옛날 기술들을 이해해야 한다)
 
 변수와 상수
 - 변수: 필요에 따라 저장된 값을 여러 번 다른 값으로 변경할 수 있다
 - 상수: 한번 저장된 값은 다른 값으로 변경할 수 없다
 - 타입: 컴퓨터는 0과 1밖에 몰라서 숫자인지 문자인지 어떤 타입인지 미리 명시해줘서 혼동하지 않도록 해준다
 
 타입
 - Int: 정수값을 저장하는 자료형
 - Double: 실수(소수점)을 저장하는 자료형(15 ~ 16자리)
 - Float:   (5~6자리)
 - String: 문자열 저장하는 자료형
 - Bool: 참 또는 거짓을 저장하는 자료형
 
 선언과 초기화
 
 - 변수        데이터타입
   var dream: String = "앱 개발자"
 
 - 상수        데이터타입
   let dream: String = "앱 개발자"
 
 타입 종류
 기본 자료형
 Int, Bool, Float, Double
 
 집단 자료형
 Array, Set, Dictionary...
 
 데이터 타입이 명시적인 경우 타입을 생략할 수 있다(Type Inference=타입추론)
 let num = 100
 let dream = "앱 개발자"
 
 타입 어노테이션(Type Annotation)
 var dream: String = "앱 개발자"
 
 선언과 초기화
 
 var dream = "앱 개발자"
 선언 초기값       초기화
 
 
 비트
 - 데이터를 표현하는 최소 기본 단위
 - 1 bit -> 0, 1 표현 가능
 - 3bit 공간에서 표현할 수 있는 데이터의 경우의 수: 2^3 = 8가지
 - 1byte = 1bit * 8 = 2^8 = 250개
 - 왜 8개로 했을까? 우리의 언어를 컴퓨터가 이해하도록 바꾸는 최소한의 과정에서.. 127가지정도가 나왔다
 - 이 127개의 표현을 어떻게 할까 -> 2^7 = 128
 - 7개 비트에서 표현 가능한데 추가적으로 정보 전달 과정에서 오류 유무를 위한 패리티 비트 하나 추가해서 2^8승
 - 정리: 바이트를 8bit로 구성한 이유?: 1바이트 하나의 실질적인 의미는 아스키 코드라고 하는 한글자를 표현할 수 있는 표현할 수 있는 데이터의 단위이기 때문
 - 아스키코드: 중국어같은 언어 고려하지 못함 -> 여러 문제 발생 -> 해결방법: 유니코드
 
 bps: bit per second
 - 100Mbps = 12.5mbps(100메가를 한번에 다운받을 수 있는게 12.5mb)  100 / 8
 */

//import Foundation

/*
@main
struct Main {
    static func main() {
        
    }
}
*/
